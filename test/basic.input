" Common set up  "{{{1

runtime! plugin/operator/*.vim




function s:describe__named_key_mappings()  "{{{1
  It "Named key mappings"

  let _ = '<Plug>(operator-replace)'
  Should maparg(_, 'c') != '' ==# 0
  Should maparg(_, 'i') != '' ==# 0
  Should maparg(_, 'n') != '' ==# 1
  Should maparg(_, 'o') != '' ==# 1
  Should maparg(_, 'v') != '' ==# 1

  Should maparg(_, 'n') =~# 'operator#replace#'
  Should maparg(_, 'o') ==# 'g@'
  Should maparg(_, 'v') =~# 'operator#replace#'
endfunction




function s:describe__usage_block_vs_block()  "{{{1
  It "Usage: block {motion} vs block {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_block_vs_char()  "{{{1
  It "Usage: block {motion} vs char {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_block_vs_line()  "{{{1
  It "Usage: block {motion} vs line {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_char_vs_block()  "{{{1
  It "Usage: char {motion} vs block {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_char_vs_char()  "{{{1
  It "Usage: char {motion} vs char {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!',
  \     'Alter, you are also SSMK.',
  \     'I"m-happy.',
  \     'You"re-happy.'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " Case 1: {operator}{characterwise-motion} without register designation
  normal! 1G0W
  Should [line('.'), col('.')] ==# [1, 7]
  let @" = 'unnamed'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed', 'v']
  execute 'normal' "\<Plug>(operator-replace)e"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Super Mega Kawaii'
  Should getline(3) ==# 'Sasara moe!  It''s burning!'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed', 'v']

  " Case 2: {characterwise-Visual}{operator} without register designation
  normal! 2G0Wl
  Should [line('.'), col('.')] ==# [2, 8]
  let @" = 'unnamed2'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed2', 'v']
  execute 'normal' "vWl\<Plug>(operator-replace)"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Sunnamed2ga Kawaii'
  Should getline(3) ==# 'Sasara moe!  It''s burning!'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed2', 'v']

  " Case 3: {operator}{characterwise-motion} with register designation
  normal! 3G0W
  Should [line('.'), col('.')] ==# [3, 8]
  let @" = 'unnamed3'
  let @s = '!@#$%^&*()'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed3', 'v']
  Should [getreg('s'), getregtype('s')] ==# ['!@#$%^&*()', 'v']
  execute 'normal' "\"s\<Plug>(operator-replace)e"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Sunnamed2ga Kawaii'
  Should getline(3) ==# 'Sasara !@#$%^&*()!  It''s burning!'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed3', 'v']
  Should [getreg('s'), getregtype('s')] ==# ['!@#$%^&*()', 'v']

  " Case 4: {characterwise-Visual}{operator} with register designation
  normal! 4G$BB
  Should [line('.'), col('.')] ==# [4, 16]
  let @" = 'unnamed4'
  let @s = ')(*&^%$#@!'
  Should [getreg('s'), getregtype('s')] ==# [')(*&^%$#@!', 'v']
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  execute 'normal' "ve\"s\<Plug>(operator-replace)"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Sunnamed2ga Kawaii'
  Should getline(3) ==# 'Sasara !@#$%^&*()!  It''s burning!'
  Should getline(4) ==# 'Alter, you are )(*&^%$#@! SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  Should [getreg('s'), getregtype('s')] ==# [')(*&^%$#@!', 'v']

  " Case 5: {operator}{characterwise-motion} including the end of buffer
  normal! 5G$b
  Should [line('.'), col('.')] ==# [5, 5]
  let @" = 'unnamed4'
  let @s = 'amane'
  Should [getreg('s'), getregtype('s')] ==# ['amane', 'v']
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  execute 'normal' "\"s\<Plug>(operator-replace)$"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Sunnamed2ga Kawaii'
  Should getline(3) ==# 'Sasara !@#$%^&*()!  It''s burning!'
  Should getline(4) ==# 'Alter, you are )(*&^%$#@! SSMK.'
  Should getline(5) ==# 'I"m-amane'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  Should [getreg('s'), getregtype('s')] ==# ['amane', 'v']

  " Case 6: {characterwise-Visual}{operator} including the end of buffer
  normal! 6G$b
  Should [line('.'), col('.')] ==# [6, 8]
  let @" = 'unnamed4'
  let @s = 'avril'
  Should [getreg('s'), getregtype('s')] ==# ['avril', 'v']
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  execute 'normal' "v$\"s\<Plug>(operator-replace)"
  Should getline(1) ==# '(herb unnamed pepper) salt water'
  Should getline(2) ==# 'Super Sunnamed2ga Kawaii'
  Should getline(3) ==# 'Sasara !@#$%^&*()!  It''s burning!'
  Should getline(4) ==# 'Alter, you are )(*&^%$#@! SSMK.'
  Should getline(5) ==# 'I"m-amane'
  Should getline(6) ==# 'You"re-avril'
  Should [getreg('"'), getregtype('"')] ==# ['unnamed4', 'v']
  Should [getreg('s'), getregtype('s')] ==# ['avril', 'v']
endfunction




function s:describe__usage_char_vs_line()  "{{{1
  It "Usage: char {motion} vs line {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_line_vs_block()  "{{{1
  It "Usage: line {motion} vs block {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_line_vs_char()  "{{{1
  It "Usage: line {motion} vs char {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " FIXME: NIY - but what result I expect for this case?
endfunction




function s:describe__usage_line_vs_line()  "{{{1
  It "Usage: line {motion} vs line {register} content"

  tabnew
  tabonly!

  let text = [
  \     '(herb oil pepper) salt water',
  \     'Super Super Mega Kawaii',
  \     'Sasara moe!  It''s burning!',
  \     'Alter, you are also SSMK.',
  \     'I"m-happy.',
  \     'You"re-happy.'
  \   ]
  silent put =text
  1 delete _
  Should getline(1, line('$')) ==# text

  " Case 1: {operator}{linewise-motion} without register designation
  normal! 1G
  let @" = "unnamed1\n"
  let @s = "Spiral1\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed1\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral1\n", 'V']
  execute 'normal' "\<Plug>(operator-replace)\<Plug>(operator-replace)"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'Super Super Mega Kawaii'
  Should getline(3) ==# 'Sasara moe!  It''s burning!'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ["unnamed1\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral1\n", 'V']

  " Case 2: {linewise-Visual}{operator} without register designation
  normal! 2G
  let @" = "unnamed2\n"
  let @s = "Spiral2\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed2\n", 'V']
  Should [getreg('"'), getregtype('"')] ==# ["unnamed2\n", 'V']
  execute 'normal' "Vwl\<Plug>(operator-replace)"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'unnamed2'
  Should getline(3) ==# 'Sasara moe!  It''s burning!'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ["unnamed2\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral2\n", 'V']

  " Case 3: {operator}{linewise-motion} with register designation
  normal! 3G
  let @" = "unnamed3\n"
  let @s = "Spiral3\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed3\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral3\n", 'V']
  execute 'normal' "\"s\<Plug>(operator-replace)\<Plug>(operator-replace)"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'unnamed2'
  Should getline(3) ==# 'Spiral3'
  Should getline(4) ==# 'Alter, you are also SSMK.'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ["unnamed3\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral3\n", 'V']

  " Case 4: {linewise-Visual}{operator} with register designation
  normal! 4G
  let @" = "unnamed4\n"
  let @s = "Spiral4\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed4\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral4\n", 'V']
  execute 'normal' "Veh\"s\<Plug>(operator-replace)"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'unnamed2'
  Should getline(3) ==# 'Spiral3'
  Should getline(4) ==# 'Spiral4'
  Should getline(5) ==# 'I"m-happy.'
  Should getline(6) ==# 'You"re-happy.'
  Should [getreg('"'), getregtype('"')] ==# ["unnamed4\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral4\n", 'V']

  " Case 5: {operator}{linewise-motion} including the end of buffer
  normal! 5G
  let @" = "unnamed5\n"
  let @s = "Spiral5\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed5\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral5\n", 'V']
  execute 'normal' "\"\"\<Plug>(operator-replace)j"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'unnamed2'
  Should getline(3) ==# 'Spiral3'
  Should getline(4) ==# 'Spiral4'
  Should getline(5) ==# 'unnamed5'
  Should line('$') ==# 5
  Should [getreg('"'), getregtype('"')] ==# ["unnamed5\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral5\n", 'V']

  " Case 6: {linewise-Visual}{operator} including the end of buffer
  normal! 5G
  let @" = "unnamed6\n"
  let @s = "Spiral6\n"
  Should [getreg('"'), getregtype('"')] ==# ["unnamed6\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral6\n", 'V']
  execute 'normal' "Vk\"\"\<Plug>(operator-replace)"
  Should getline(1) ==# 'unnamed1'
  Should getline(2) ==# 'unnamed2'
  Should getline(3) ==# 'Spiral3'
  Should getline(4) ==# 'unnamed6'
  Should line('$') ==# 4
  Should [getreg('"'), getregtype('"')] ==# ["unnamed6\n", 'V']
  Should [getreg('s'), getregtype('s')] ==# ["Spiral6\n", 'V']
endfunction




" __END__  "{{{1
" vim: filetype=vim foldmethod=marker
